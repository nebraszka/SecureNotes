@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorageService
@inject NavigationManager NavigationManager

@code {
    private string uniqueName = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user!.Identity!.IsAuthenticated)
        {
            uniqueName = user.FindFirst(c => c.Type == "unique_name")?.Value ?? "Nieznany użytkownik";
        }
    }
}

<PageTitle>Secure Notes</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row d-flex justify-content-between align-items-center">
            <AuthorizeView>
                <Authorized>
                    <button class="btn btn-danger" @onclick="Logout">Wyloguj</button>
                </Authorized>
            </AuthorizeView>

            <div class="login-container">
                <AuthorizeView>
                    <Authorized>
                        <p class="login-info" style="color: black">Jesteś zalogowany jako @uniqueName</p>
                    </Authorized>
                </AuthorizeView>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code
{
    private async Task Logout()
    {
        await LocalStorageService.RemoveItemAsync("token");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/");
    }
}